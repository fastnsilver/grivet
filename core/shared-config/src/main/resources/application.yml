ribbon:
  ServerListRefreshInterval: 1000

endpoints:
  health:
    sensitive: false
  restart:
    enabled: true
  shutdown:
    enabled: true
    
spring:
  profiles:
    active: h2,insecure
  cloud:
    config:
      enabled: false
    discovery:
      enabled: false    
  jpa:
    hibernate:
      ddl-auto: none
  jackson:
    serialization-inclusion: non-empty
    
flyway:
  placeholders:
    preamble:
    varcharQualifier: 
    createTableSuffix:
    longVarBinary:
    
logging:
  level:
    org.flyway: WARN
    org.hibernate: WARN
    org.springframework: INFO
    com.zaxxer.hikari: WARN
    com.fns.grivet: INFO
    
server:
  compression:
    enabled: true
  undertow:
    accesslog:
      enabled: true
     
---

spring:
  profiles: h2
  datasource:
    url: jdbc:h2:mem:grivetdb;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
    driver-class-name: org.h2.Driver
    data-source-class-name: org.h2.jdbcx.JdbcDataSource
    username: sa
    password: sa
  h2:
    console:
      enabled: true

flyway:
  locations: classpath:db/migration, classpath:db/users
  placeholders:
    autoInc: AUTO_INCREMENT
    dateFormatFn: FORMATDATETIME(val, 'yyyy-MM-dd')
    dateTimeFormatFn: CONCAT(FORMATDATETIME(val, 'yyyy-MM-dd'), 'T', FORMATDATETIME(val, 'HH:mm:ss'))
    instantFormatFn: CONCAT(FORMATDATETIME(val, 'yyyy-MM-dd'), 'T', FORMATDATETIME(val, 'HH:mm:ss'))
    textColumnType: TEXT
    longTextColumnType: LONGTEXT
    longVarBinary: LONGBLOB
    renameTableKeyword: RENAME TO
    alterColumnKeyword: ALTER COLUMN

---

spring:
  profiles: hsqldb
  datasource:
    url: jdbc:hsqldb:mem:grivetdb
    driver-class-name: org.hsqldb.jdbcDriver
    data-source-class-name: org.hsqldb.jdbc.JDBCDataSource
    username: sa
    password: 
  jpa:
    show-sql: true
    properties:
      hibernate.connection.autocommit: true

flyway:
  locations: classpath:db/migration, classpath:db/hsqldb, classpath:db/users
  placeholders:
    autoInc: GENERATED BY DEFAULT AS IDENTITY
    dateFormatFn: TO_CHAR(val, 'YYYY-MM-DD')
    dateTimeFormatFn: TO_CHAR(val, 'YYYY-MM-DD"T"HH24:MI:SS')
    instantFormatFn: TO_CHAR(val, 'YYYY-MM-DD"T"HH24:MI:SS')
    textColumnType: VARCHAR(4000)
    longTextColumnType: VARCHAR(8000)
    longVarBinary: LONGVARBINARY
    renameTableKeyword: RENAME TO
    alterColumnKeyword: ALTER COLUMN
    
---

spring:
  profiles: mysql
  datasource:
    url: jdbc:mysql://localhost:3306/grivetdb
    driver-class-name: com.mysql.cj.jdbc.Driver
    data-source-class-name: com.mysql.cj.jdbc.MysqlDataSource
    # TODO move these values to config server repository!
    username: root
    password: jackal#3

flyway:
  locations: classpath:db/with_partitions, classpath:db/users
  placeholders:
    preamble: |
      /*!40101 SET character_set_client = utf8mb4 */;
      /*!40101 SET global innodb_file_format = BARRACUDA */;
      /*!40101 SET global innodb_large_prefix = ON */;
    autoInc: AUTO_INCREMENT 
    dateFormatFn: DATE_FORMAT(val, '%Y-%m-%d')
    dateTimeFormatFn: DATE_FORMAT(val, '%Y-%m-%dT%T')
    instantFormatFn: DATE_FORMAT(val, '%Y-%m-%dT%T')
    textColumnType: TEXT
    longTextColumnType: LONGTEXT
    longVarBinary: LONGBLOB
    varcharQualifier: CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci
    createTableSuffix: ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC
    renameTableKeyword: RENAME
    alterColumnKeyword: MODIFY
        
---

spring:
  profiles: docker
  profiles.include: mysql,insecure
  cloud:
    config:
      enabled: true
      uri: http://config-service:8888
    discovery:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
    
monitoring:
  statsd:
    enabled: true
    hostname: graphite
    
---

spring:
  profiles: secure
  
auth0:
  # Your auth0 domain. You can find the correct value on the Settings tab of your client on https://manage.auth0.com/#/applications.
  domain: grivet.auth0.com
  # The issuer of the JWT Token. This is typically your auth0 domain with a https:// prefix and a / suffix. For example, if your auth0.domain is example.auth0.com then the auth0.issuer should be set to https://example.auth0.com/ (the trailing slash is important).
  issuer: https://grivet.auth0.com/
  # The unique identifier for your client. You can find the correct value on the Settings tab of your client on https://manage.auth0.com/#/applications.
  clientId: CgD61juZc75K0DZOQvtLwwAKlqYBjTZX
  # The secret used to sign and validate the tokens that will be used in the different authentication flows. You can find the correct value on the Settings tab of your client on https://manage.auth0.com/#/applications..
  clientSecret: AuF0LVuG4IZIEfxHbWBtnyVidizrDV22okEP9nvDzAKH47aoHDiSHg1pMP565wvi
  # The URL pattern that should map to the URL endpoint you wish to secure. You should replace its value with the correct value for your implementation. It should start with /. 
  securedRoute: NOT_USED
  # A boolean value indicating whether the Secret used to verify the JWT is base64 encoded. The default is false.
  base64EncodedSecret: false
  # Indicates whether authorization claims against the Principal shall be GROUPS, ROLES or SCOPE based. The default is ROLES.
  authorityStrategy: ROLES
  # A boolean value that switches having the default config enabled. It should be set to false.
  defaultAuth0ApiSecurityEnabled: false
  # Used when you want to use either HS256 or RS256 as a signing algorithm.
  signingAlgorithm: RS256
  # Indicates the certification in case you use RS256.
  publicKeyPath: certificate/cert.pem
---

spring:
  profiles: insecure

management:
  security:
    enabled: false
    
security:
  basic:
    enabled: false
    
---

spring:
  profiles: https

server:
  port: 8443
  ssl:
    key-store: classpath:keystore.jks
    key-store-password: password
    key-password: password
  
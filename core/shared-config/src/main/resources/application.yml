ribbon:
  ServerListRefreshInterval: 1000

eureka:
  client:
    enabled: false

spring:
  profiles:
    active: h2,insecure

  cloud:
    config:
      enabled: false

  jpa:
    hibernate:
      ddl-auto: none

  jackson:
    serialization-inclusion: non-empty

  flyway:
    placeholders:
      preamble:
      varcharQualifier:
      createTableSuffix:
      longVarBinary:

logging:
  level:
    org.flyway: WARN
    org.hibernate: WARN
    org.springframework: INFO
    com.zaxxer.hikari: WARN
    com.fns.grivet: INFO

management:
  endpoints:
    web:
      exposure:
        include: "*"

server:
  compression:
    enabled: true
  undertow:
    accesslog:
      enabled: true

---

spring:
  config.activate.on-profile: h2
  datasource:
    url: jdbc:h2:mem:grivetdb;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
    driver-class-name: org.h2.Driver
    data-source-class-name: org.h2.jdbcx.JdbcDataSource
    username: admin
    password: thunderb0lt!
  h2:
    console:
      enabled: true

  flyway:
    locations: classpath:db/migration, classpath:db/users
    placeholders:
      autoInc: AUTO_INCREMENT
      dateFormatFn: FORMATDATETIME(val, 'yyyy-MM-dd')
      dateTimeFormatFn: CONCAT(FORMATDATETIME(val, 'yyyy-MM-dd'), 'T', FORMATDATETIME(val, 'HH:mm:ss'))
      instantFormatFn: CONCAT(FORMATDATETIME(val, 'yyyy-MM-dd'), 'T', FORMATDATETIME(val, 'HH:mm:ss'))
      castedColumnType: VARCHAR(1000000)
      dateTimeColumnType: TIMESTAMP(9)
      textColumnType: TEXT
      longTextColumnType: LONGTEXT
      longVarBinary: LONGBLOB
      renameTableKeyword: RENAME TO
      alterColumnKeyword: ALTER COLUMN

---

spring:
  config.activate.on-profile: hsqldb
  datasource:
    name: test-hsqldb
    url: jdbc:hsqldb:mem:grivetdb
    driver-class-name: org.hsqldb.jdbcDriver
    data-source-class-name: org.hsqldb.jdbc.JDBCDataSource
    username: sa
    password: 
  jpa:
    properties:
      hibernate:
        connection.autocommit: true

  flyway:
    locations: classpath:db/migration, classpath:db/hsqldb, classpath:db/users
    placeholders:
      autoInc: GENERATED BY DEFAULT AS IDENTITY
      dateFormatFn: TO_CHAR(val, 'YYYY-MM-DD')
      dateTimeFormatFn: TO_CHAR(val, 'YYYY-MM-DD"T"HH24:MI:SS')
      instantFormatFn: TO_CHAR(val, 'YYYY-MM-DD"T"HH24:MI:SS')
      castedColumnType: TEXT
      dateTimeColumnType: DATETIME
      textColumnType: VARCHAR(4000)
      longTextColumnType: VARCHAR(8000)
      longVarBinary: LONGVARBINARY
      renameTableKeyword: RENAME TO
      alterColumnKeyword: ALTER COLUMN
---

spring:
  config.activate.on-profile: mysql
  datasource:
    url: jdbc:mysql://localhost:3306/grivetdb
    driver-class-name: com.mysql.cj.jdbc.Driver
    data-source-class-name: com.mysql.cj.jdbc.MysqlDataSource
    # Uncomment these if you want to embed config in deployable
    # Otherwise, leave commented out and make sur eto specify environment variables or specifcy key-value pairs in an application.yml in a config server repository!
    #username: root
    #password: jackal!3

  flyway:
    locations: classpath:db/with_partitions, classpath:db/users
    placeholders:
    preamble: |
      /*!40101 SET character_set_client = utf8mb4 */;
      /*!40101 SET global innodb_file_format = BARRACUDA */;
      /*!40101 SET global innodb_large_prefix = ON */;
    autoInc: AUTO_INCREMENT 
    castedColumnType: LONGTEXT
    dateFormatFn: DATE_FORMAT(val, '%Y-%m-%d')
    dateTimeFormatFn: DATE_FORMAT(val, '%Y-%m-%dT%T')
    instantFormatFn: DATE_FORMAT(val, '%Y-%m-%dT%T')
    dateTimeColumnType: DATETIME(3)
    textColumnType: TEXT
    longTextColumnType: LONGTEXT
    longVarBinary: LONGBLOB
    varcharQualifier: CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci
    createTableSuffix: ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC
    renameTableKeyword: RENAME
    alterColumnKeyword: MODIFY

---

spring:
  config.activate.on-profile: docker
  cloud:
    config:
      enabled: true
      uri: http://config-service:8888
    discovery:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/

---

spring:
  config.activate.on-profile: secure

# TODO put Okta Spring Boot 3.x properties here

---

spring:
  config.activate.on-profile: insecure

# @see https://github.com/spring-projects/spring-boot/issues/10306
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

---

spring:
  config.activate.on-profile: https

server:
  port: 8443
  ssl:
    key-store: classpath:keystore.jks
    key-store-password: password
    key-password: password

---

spring:
  profiles:
    group:
      demo: docker,mysql,insecure

/*
 * Copyright 2015 - Chris Phillipson
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.fns.grivet.model;

import java.time.LocalDateTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Version;
import jakarta.validation.constraints.Size;

import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * A {@code Class} is akin to an abstract base {@link java.lang.Class}
 * but is constrained to the definition of member variables. A {@code Class}
 * may be linked to a <a href="http://json-schema.org/">JSON Schema</a> for purposes of
 * validating an object's attributes (expressed in JSON format).
 * @see ClassAttribute
 *
 * @author Chris Phillipson
 */
@Data
@Builder
@NoArgsConstructor(access=AccessLevel.PACKAGE)
@AllArgsConstructor(access=AccessLevel.PACKAGE)
@Entity
@EntityListeners(AuditingEntityListener.class)
public class Class implements Auditable<String> {

    /**
     * Version number used during deserialization to verify that the sender and receiver
     * of this serialized object have loaded classes for this object that
     * are compatible with respect to serialization.
     */
    private static final long serialVersionUID = 1L;

    @Column
    @CreatedBy
    private String createdBy;

    @Column
    @LastModifiedBy
    private String updatedBy;

    /** The time this entity was created. */
    @Column(nullable=false, updatable = false, columnDefinition = "TIMESTAMP")
    @CreatedDate
    private LocalDateTime createdTime;

    /** The time this entity was last modified. */
    @Column(columnDefinition = "TIMESTAMP")
    @LastModifiedDate
    private LocalDateTime updatedTime;

    @Version
    @Column
    private long version;

    /** The id. Auto-generated by the underyling data-store. */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    /** The name of the class. Must be non-null, unique and less than 256 characters. */
    @Size(max=255)
    @Column(nullable=false, unique=true)
    private String name;

    /** The description of the attribute. Optional, but must be less than equal to 1000 characters. */
    @Column
    private String description;

    /** Whether or not an object (JSON payload) should be validated before being persisted.  Default is false. */
    @Column
    private boolean validatable;

    /** A JSON Schema.  Used to validate an object (JSON payload). */
    @Column
    private String jsonSchema;

}

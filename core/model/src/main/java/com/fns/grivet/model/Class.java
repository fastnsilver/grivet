/*
 * Copyright 2015 - Chris Phillipson
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.fns.grivet.model;

import java.time.LocalDateTime;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Version;
import jakarta.validation.constraints.Size;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * A {@code Class} is akin to an abstract base {@link java.lang.Class} but is constrained
 * to the definition of member variables. A {@code Class} may be linked to a
 * <a href="http://json-schema.org/">JSON Schema</a> for purposes of validating an
 * object's attributes (expressed in JSON format).
 *
 * @see ClassAttribute
 * @author Chris Phillipson
 */
@Entity
@EntityListeners(AuditingEntityListener.class)
public class Class implements Auditable<String> {

	/**
	 * Version number used during deserialization to verify that the sender and receiver
	 * of this serialized object have loaded classes for this object that are compatible
	 * with respect to serialization.
	 */
	private static final long serialVersionUID = 1L;

	@Column
	@CreatedBy
	private String createdBy;

	@Column
	@LastModifiedBy
	private String updatedBy;

	/**
	 * The time this entity was created.
	 */
	@Column(nullable = false, updatable = false, columnDefinition = "TIMESTAMP")
	@CreatedDate
	private LocalDateTime createdTime;

	/**
	 * The time this entity was last modified.
	 */
	@Column(columnDefinition = "TIMESTAMP")
	@LastModifiedDate
	private LocalDateTime updatedTime;

	@Version
	@Column
	private long version;

	/**
	 * The id. Auto-generated by the underyling data-store.
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;

	/**
	 * The name of the class. Must be non-null, unique and less than 256 characters.
	 */
	@Size(max = 255)
	@Column(nullable = false, unique = true)
	private String name;

	/**
	 * The description of the attribute. Optional, but must be less than equal to 1000
	 * characters.
	 */
	@Column
	private String description;

	/**
	 * Whether or not an object (JSON payload) should be validated before being persisted.
	 * Default is false.
	 */
	@Column
	private boolean validatable;

	/**
	 * A JSON Schema. Used to validate an object (JSON payload).
	 */
	@Column
	private String jsonSchema;

	/**
	 * Creates a new {@code Class} instance.
	 */
	public static class ClassBuilder {

		private String createdBy;

		private String updatedBy;

		private LocalDateTime createdTime;

		private LocalDateTime updatedTime;

		private long version;

		private Integer id;

		private String name;

		private String description;

		private boolean validatable;

		private String jsonSchema;

		ClassBuilder() {
		}

		/**
		 * @return {@code this}.
		 */
		public Class.ClassBuilder createdBy(final String createdBy) {
			this.createdBy = createdBy;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		public Class.ClassBuilder updatedBy(final String updatedBy) {
			this.updatedBy = updatedBy;
			return this;
		}

		/**
		 * The time this entity was created.
		 * @return {@code this}.
		 */
		public Class.ClassBuilder createdTime(final LocalDateTime createdTime) {
			this.createdTime = createdTime;
			return this;
		}

		/**
		 * The time this entity was last modified.
		 * @return {@code this}.
		 */
		public Class.ClassBuilder updatedTime(final LocalDateTime updatedTime) {
			this.updatedTime = updatedTime;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		public Class.ClassBuilder version(final long version) {
			this.version = version;
			return this;
		}

		/**
		 * The id. Auto-generated by the underyling data-store.
		 * @return {@code this}.
		 */
		public Class.ClassBuilder id(final Integer id) {
			this.id = id;
			return this;
		}

		/**
		 * The name of the class. Must be non-null, unique and less than 256 characters.
		 * @return {@code this}.
		 */
		public Class.ClassBuilder name(final String name) {
			this.name = name;
			return this;
		}

		/**
		 * The description of the attribute. Optional, but must be less than equal to 1000
		 * characters.
		 * @return {@code this}.
		 */
		public Class.ClassBuilder description(final String description) {
			this.description = description;
			return this;
		}

		/**
		 * Whether or not an object (JSON payload) should be validated before being
		 * persisted. Default is false.
		 * @return {@code this}.
		 */
		public Class.ClassBuilder validatable(final boolean validatable) {
			this.validatable = validatable;
			return this;
		}

		/**
		 * A JSON Schema. Used to validate an object (JSON payload).
		 * @return {@code this}.
		 */
		public Class.ClassBuilder jsonSchema(final String jsonSchema) {
			this.jsonSchema = jsonSchema;
			return this;
		}

		public Class build() {
			return new Class(this.createdBy, this.updatedBy, this.createdTime, this.updatedTime, this.version, this.id,
					this.name, this.description, this.validatable, this.jsonSchema);
		}

		@Override
		public String toString() {
			return "Class.ClassBuilder(createdBy=" + this.createdBy + ", updatedBy=" + this.updatedBy + ", createdTime="
					+ this.createdTime + ", updatedTime=" + this.updatedTime + ", version=" + this.version + ", id="
					+ this.id + ", name=" + this.name + ", description=" + this.description + ", validatable="
					+ this.validatable + ", jsonSchema=" + this.jsonSchema + ")";
		}

	}

	public static Class.ClassBuilder builder() {
		return new Class.ClassBuilder();
	}

	public String getCreatedBy() {
		return this.createdBy;
	}

	public String getUpdatedBy() {
		return this.updatedBy;
	}

	/**
	 * The time this entity was created.
	 */
	public LocalDateTime getCreatedTime() {
		return this.createdTime;
	}

	/**
	 * The time this entity was last modified.
	 */
	public LocalDateTime getUpdatedTime() {
		return this.updatedTime;
	}

	public long getVersion() {
		return this.version;
	}

	/**
	 * The id. Auto-generated by the underyling data-store.
	 */
	public Integer getId() {
		return this.id;
	}

	/**
	 * The name of the class. Must be non-null, unique and less than 256 characters.
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * The description of the attribute. Optional, but must be less than equal to 1000
	 * characters.
	 */
	public String getDescription() {
		return this.description;
	}

	/**
	 * Whether or not an object (JSON payload) should be validated before being persisted.
	 * Default is false.
	 */
	public boolean isValidatable() {
		return this.validatable;
	}

	/**
	 * A JSON Schema. Used to validate an object (JSON payload).
	 */
	public String getJsonSchema() {
		return this.jsonSchema;
	}

	public void setCreatedBy(final String createdBy) {
		this.createdBy = createdBy;
	}

	public void setUpdatedBy(final String updatedBy) {
		this.updatedBy = updatedBy;
	}

	/**
	 * The time this entity was created.
	 */
	public void setCreatedTime(final LocalDateTime createdTime) {
		this.createdTime = createdTime;
	}

	/**
	 * The time this entity was last modified.
	 */
	public void setUpdatedTime(final LocalDateTime updatedTime) {
		this.updatedTime = updatedTime;
	}

	public void setVersion(final long version) {
		this.version = version;
	}

	/**
	 * The id. Auto-generated by the underyling data-store.
	 */
	public void setId(final Integer id) {
		this.id = id;
	}

	/**
	 * The name of the class. Must be non-null, unique and less than 256 characters.
	 */
	public void setName(final String name) {
		this.name = name;
	}

	/**
	 * The description of the attribute. Optional, but must be less than equal to 1000
	 * characters.
	 */
	public void setDescription(final String description) {
		this.description = description;
	}

	/**
	 * Whether or not an object (JSON payload) should be validated before being persisted.
	 * Default is false.
	 */
	public void setValidatable(final boolean validatable) {
		this.validatable = validatable;
	}

	/**
	 * A JSON Schema. Used to validate an object (JSON payload).
	 */
	public void setJsonSchema(final String jsonSchema) {
		this.jsonSchema = jsonSchema;
	}

	@Override
	public boolean equals(final Object o) {
		if (o == this)
			return true;
		if (!(o instanceof Class))
			return false;
		final Class other = (Class) o;
		if (!other.canEqual((Object) this))
			return false;
		if (this.getVersion() != other.getVersion())
			return false;
		if (this.isValidatable() != other.isValidatable())
			return false;
		final Object this$id = this.getId();
		final Object other$id = other.getId();
		if (this$id == null ? other$id != null : !this$id.equals(other$id))
			return false;
		final Object this$createdBy = this.getCreatedBy();
		final Object other$createdBy = other.getCreatedBy();
		if (this$createdBy == null ? other$createdBy != null : !this$createdBy.equals(other$createdBy))
			return false;
		final Object this$updatedBy = this.getUpdatedBy();
		final Object other$updatedBy = other.getUpdatedBy();
		if (this$updatedBy == null ? other$updatedBy != null : !this$updatedBy.equals(other$updatedBy))
			return false;
		final Object this$createdTime = this.getCreatedTime();
		final Object other$createdTime = other.getCreatedTime();
		if (this$createdTime == null ? other$createdTime != null : !this$createdTime.equals(other$createdTime))
			return false;
		final Object this$updatedTime = this.getUpdatedTime();
		final Object other$updatedTime = other.getUpdatedTime();
		if (this$updatedTime == null ? other$updatedTime != null : !this$updatedTime.equals(other$updatedTime))
			return false;
		final Object this$name = this.getName();
		final Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name))
			return false;
		final Object this$description = this.getDescription();
		final Object other$description = other.getDescription();
		if (this$description == null ? other$description != null : !this$description.equals(other$description))
			return false;
		final Object this$jsonSchema = this.getJsonSchema();
		final Object other$jsonSchema = other.getJsonSchema();
		if (this$jsonSchema == null ? other$jsonSchema != null : !this$jsonSchema.equals(other$jsonSchema))
			return false;
		return true;
	}

	protected boolean canEqual(final Object other) {
		return other instanceof Class;
	}

	@Override
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final long $version = this.getVersion();
		result = result * PRIME + (int) ($version >>> 32 ^ $version);
		result = result * PRIME + (this.isValidatable() ? 79 : 97);
		final Object $id = this.getId();
		result = result * PRIME + ($id == null ? 43 : $id.hashCode());
		final Object $createdBy = this.getCreatedBy();
		result = result * PRIME + ($createdBy == null ? 43 : $createdBy.hashCode());
		final Object $updatedBy = this.getUpdatedBy();
		result = result * PRIME + ($updatedBy == null ? 43 : $updatedBy.hashCode());
		final Object $createdTime = this.getCreatedTime();
		result = result * PRIME + ($createdTime == null ? 43 : $createdTime.hashCode());
		final Object $updatedTime = this.getUpdatedTime();
		result = result * PRIME + ($updatedTime == null ? 43 : $updatedTime.hashCode());
		final Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		final Object $description = this.getDescription();
		result = result * PRIME + ($description == null ? 43 : $description.hashCode());
		final Object $jsonSchema = this.getJsonSchema();
		result = result * PRIME + ($jsonSchema == null ? 43 : $jsonSchema.hashCode());
		return result;
	}

	@Override
	public String toString() {
		return "Class(createdBy=" + this.getCreatedBy() + ", updatedBy=" + this.getUpdatedBy() + ", createdTime="
				+ this.getCreatedTime() + ", updatedTime=" + this.getUpdatedTime() + ", version=" + this.getVersion()
				+ ", id=" + this.getId() + ", name=" + this.getName() + ", description=" + this.getDescription()
				+ ", validatable=" + this.isValidatable() + ", jsonSchema=" + this.getJsonSchema() + ")";
	}

	Class() {
	}

	Class(final String createdBy, final String updatedBy, final LocalDateTime createdTime,
			final LocalDateTime updatedTime, final long version, final Integer id, final String name,
			final String description, final boolean validatable, final String jsonSchema) {
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.createdTime = createdTime;
		this.updatedTime = updatedTime;
		this.version = version;
		this.id = id;
		this.name = name;
		this.description = description;
		this.validatable = validatable;
		this.jsonSchema = jsonSchema;
	}

}

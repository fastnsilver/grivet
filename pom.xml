<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.BUILD-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <groupId>com.fns</groupId>
    <artifactId>grivet-parent</artifactId>
    <version>0.4.0-SNAPSHOT</version>
    <packaging>pom</packaging>

	<name>Grivet Parent POM</name>
	<description>A collection of services and UI that support a Grivet installation. All Grivet modules inherit profiles, properties, dependencies, plugins from here.</description>

    <prerequisites>
        <maven>3.5.0</maven>
    </prerequisites>
    
	<modules>
        <module>core</module>
        <module>support</module>
        <module>test</module>
    </modules>


    <organization>
        <name>FNS</name>
        <url>http://fastnsilver.github.io</url>
    </organization>

    <issueManagement>
        <url>https://github.com/fastnsilver/grivet/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/fastnsilver/grivet</url>
        <connection>scm:git:git://github.com/fastnsilver/grivet.git</connection>
        <developerConnection>scm:git:git@github.com:fastnsilver/grivet.git</developerConnection>
    </scm>

    <developers>
        <developer>
            <email>fastnsilver@gmail.com</email>
            <name>Chris Phillipson</name>
            <url>https://github.com/fastnsilver</url>
            <id>fastnsilver</id>
        </developer>
    </developers>

    <distributionManagement>
        <!-- publish to GitHub gh-pages -->
        <site>
            <id>github</id>
            <name>Deployment through Maven's SCM Publish Plugin</name>
            <url>scm:git:git@github.com:fastnsilver/grivet.git</url>
        </site>
    </distributionManagement>

    <properties>
        <!-- General -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <!-- Third-party library versions -->
        <auth0-api.version>0.4.0</auth0-api.version>
        <commons-lang3.version>3.6</commons-lang3.version>
        <commons-io.version>2.5</commons-io.version>
        <dashboard.version>1.0.1</dashboard.version>
        <flyway.version>4.2.0</flyway.version>
        <guava.version>23.0-android</guava.version>
        <hibernate.version>5.2.11.Final</hibernate.version>
        <hikaricp.version>2.7.1</hikaricp.version>
        <jackson.version>2.9.0</jackson.version>
        <jadira.version>6.0.1.GA</jadira.version>
        <javax.persistence.version>1.0.0.Final</javax.persistence.version>
        <javax.validation-api.version>2.0.0.Final</javax.validation-api.version>
        <json-unit.version>1.25.1</json-unit.version>
        <json.version>20171018</json.version>
        <json-schema-validator.version>2.2.6</json-schema-validator.version>
        <jsr305.version>3.0.1</jsr305.version>
        <junit.jupiter.version>5.0.2</junit.jupiter.version>
        <junit.platform.version>1.0.1</junit.platform.version>
        <logstash-logback-encoder.version>4.9</logstash-logback-encoder.version>
        <lombok.version>1.16.18</lombok.version>
        <micrometer.version>1.0.0-rc.3</micrometer.version>
        <mysql.version>8.0.7-dmr</mysql.version>
        <rest-assured.version>3.0.2</rest-assured.version>
        <scala.version>2.10.6</scala.version>
        <slf4j.version>1.7.25</slf4j.version>
        <spring-boot-admin.version>1.5.4</spring-boot-admin.version>
        <spring-restdocs.version>2.0.0.BUILD-SNAPSHOT</spring-restdocs.version>
        <springfox-swagger2.version>2.7.0</springfox-swagger2.version>

        <!-- Maven -->
        <apiviz.version>1.3.2.GA</apiviz.version>
        <asciidoctor-maven-plugin.version>1.5.6</asciidoctor-maven-plugin.version>
        <docker-maven-plugin.version>0.22.1</docker-maven-plugin.version>
        <downloads-maven-plugin.version>0.6</downloads-maven-plugin.version>
        <doxia-module-markdown.version>1.6</doxia-module-markdown.version>
        <findbugs-maven-plugin.version>3.0.3</findbugs-maven-plugin.version>
        <jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
        <lombok-maven-plugin.version>1.16.18.1</lombok-maven-plugin.version>
        <maven-changes-plugin.version>2.11</maven-changes-plugin.version>
        <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
        <maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
        <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
        <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>
        <maven-plugin-plugin.version>3.4</maven-plugin-plugin.version>
        <maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <maven-scm-provider-jgit.version>1.9.4</maven-scm-provider-jgit.version>
        <maven-site-plugin.version>3.4</maven-site-plugin.version>
        <maven-scm-publish-plugin.version>1.1</maven-scm-publish-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>2.19.1</maven-surefire-report-plugin.version>
        <plan-maven-plugin.version>1.2</plan-maven-plugin.version>
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
        <reflow-velocity-tools.version>1.1.1</reflow-velocity-tools.version>
        <sonar-maven-plugin.version>3.3.0.603</sonar-maven-plugin.version>
        <spring-banner-plugin.version>1.0</spring-banner-plugin.version>
        <taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>
        <velocity.version>1.7</velocity.version>
        <versions-maven-plugin.version>2.4</versions-maven-plugin.version>
        <wagon-webdav-jackrabbit.version>2.8</wagon-webdav-jackrabbit.version>
    </properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-releasetrain</artifactId>
				<version>Kay-SR1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Finchley.BUILD-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-stream-dependencies</artifactId>
				<version>Elmhurst.BUILD-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
    		<pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/libs-snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <!--
                            Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Surefire plugin is executed.
                        -->
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                <!--
                                    Sets the name of the property containing the settings
                                    for JaCoCo runtime agent.
                                -->
                                <propertyName>surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <!--
                            Ensures that the code coverage report for unit tests is created after
                            unit tests have been run.
                        -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                				<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                				<!-- Sets the output directory for the code coverage report. -->
                				<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>

                        <!-- The Executions required by unit tests are omitted. -->
                        <!--
                            Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Failsafe plugin is executed.
                        -->
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                				<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                                <!--
                                    Sets the name of the property containing the settings
                                    for JaCoCo runtime agent.
                                -->
                                <propertyName>failsafeArgLine</propertyName>
                            </configuration>
                        </execution>
                        <!--
                            Ensures that the code coverage report for integration tests after
                            integration tests have been run.
                        -->
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                				<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                				<!-- Sets the output directory for the code coverage report. -->
                				<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
          			<groupId>org.codehaus.mojo</groupId>
          			<artifactId>sonar-maven-plugin</artifactId>
          			<version>${sonar-maven-plugin.version}</version>
	        		</plugin>
	        		<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
            </plugins>
        </pluginManagement>

        <plugins>
        		<plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <!-- this is false by default, forces the plugin to generate the git.properties file -->
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <!-- The path for the properties file to be generated. See Super Pom for default variable reference https://maven.apache.org/guides/introduction/introduction-to-the-pom.html -->
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                </configuration>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>${properties-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
						    <quiet>true</quiet>
							<files>
								<file>${project.build.outputDirectory}/git.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>tk.skuro</groupId>
                <artifactId>plan-maven-plugin</artifactId>
                <version>${plan-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <!-- Build test-jar artifact so that we can share test resources and implementation if required -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
                <dependencies>
	                	<dependency>
					    <groupId>org.junit.platform</groupId>
					    <artifactId>junit-platform-surefire-provider</artifactId>
					    <version>${junit.platform.version}</version>
					</dependency>
					<dependency>
			            <groupId>org.junit.jupiter</groupId>
			            <artifactId>junit-jupiter-engine</artifactId>
			            <version>${junit.jupiter.version}</version>
			        </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!-- Sets the VM argument line used when integration tests are run. -->
                    <argLine>${failsafeArgLine}</argLine>
                    <!--
                        Skips integration tests if the value of skip.integration.tests property
                        is true
                    -->
                    <skipTests>${skip.integration.tests}</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
					<dependency>
					    <groupId>org.junit.platform</groupId>
					    <artifactId>junit-platform-surefire-provider</artifactId>
					    <version>${junit.platform.version}</version>
					</dependency>
					<dependency>
			            <groupId>org.junit.jupiter</groupId>
			            <artifactId>junit-jupiter-engine</artifactId>
			            <version>${junit.jupiter.version}</version>
			        </dependency>
       			</dependencies>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
        		<groupId>org.codehaus.mojo</groupId>
       	 		<artifactId>sonar-maven-plugin</artifactId>
      		</plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>documentation</id>
            <repositories>
                <repository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <id>central</id>
                    <name>bintray</name>
                    <url>http://jcenter.bintray.com</url>
                </repository>
            </repositories>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-site-plugin</artifactId>
                            <version>${maven-site-plugin.version}</version>
                            <configuration>
                                <locales>en</locales>
                                <port>9000</port>
                                <skipDeploy>true</skipDeploy>
                                <tempWebappDirectory>${basedir}/target/site/tempdir</tempWebappDirectory>
                                <relativizeDecorationLinks>false</relativizeDecorationLinks>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <!--
                                    | allows markdown syntax for site generation. To use it place files below
                                    | src/site/markdown/[filename].md
                                    -->
                                    <groupId>org.apache.maven.doxia</groupId>
                                    <artifactId>doxia-module-markdown</artifactId>
                                    <version>${doxia-module-markdown.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.maven.wagon</groupId>
                                    <artifactId>wagon-webdav-jackrabbit</artifactId>
                                    <version>${wagon-webdav-jackrabbit.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>lt.velykis.maven.skins</groupId>
                                    <artifactId>reflow-velocity-tools</artifactId>
                                    <version>${reflow-velocity-tools.version}</version>
                                </dependency>
                                <!-- Reflow skin requires Velocity >= 1.7  -->
                                <dependency>
                                    <groupId>org.apache.velocity</groupId>
                                    <artifactId>velocity</artifactId>
                                    <version>${velocity.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>stage-for-scm-publish</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>stage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-publish-plugin</artifactId>
                        <version>${maven-scm-publish-plugin.version}</version>
                        <configuration>
                            <scmBranch>gh-pages</scmBranch>
                        </configuration>
                        <executions>
                            <execution>
                                <id>scm-publish</id>
                                <phase>site-deploy</phase>
                                <goals>
                                    <goal>publish-scm</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changelog-plugin</artifactId>
                        <version>${maven-changelog-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.scm</groupId>
                                <artifactId>maven-scm-provider-jgit</artifactId>
                                <version>${maven-scm-provider-jgit.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <configuration>
                            <!-- Default configuration for all reports -->
                            <detectOfflineLinks>true</detectOfflineLinks>
                            <!-- <detectLinks>true</detectLinks> -->
                            <detectJavaApiLink>true</detectJavaApiLink>
                            <linksource>true</linksource>
                            <useStandardDocletOptions>true</useStandardDocletOptions>
                            <breakiterator>true</breakiterator>
                            <javadocVersion>${compileSource}</javadocVersion>
                            <version>true</version>
                            <author>true</author>
                            <keywords>true</keywords>
                            <minmemory>128m</minmemory>
                            <maxmemory>512m</maxmemory>
                            <doclet>org.jboss.apiviz.APIviz</doclet>
                            <docletArtifact>
                                <groupId>org.jboss.apiviz</groupId>
                                <artifactId>apiviz</artifactId>
                                <version>${apiviz.version}</version>
                            </docletArtifact>
                            <additionalparam>
                                -charset UTF-8
                                -docencoding UTF-8
                                -version
                                -author
                                -breakiterator
                                -linksource
                                -sourcetab 4
                                -windowtitle "${project.name} ${project.version} API Reference"
                                -doctitle "${project.name} ${project.version} API Reference"
                                -link https://docs.oracle.com/javase/8/docs/api/
                                -link http://jsr311.java.net/nonav/releases/1.1
                                -Xdoclint:none
                            </additionalparam>
                            <sourcepath>target/generated-sources/delombok</sourcepath>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>non-aggregate</id>
                                <configuration>
                                    <!-- Specific configuration for the non aggregate report -->
                                    <doclet>org.jboss.apiviz.APIviz</doclet>
                                    <docletArtifact>
                                        <groupId>org.jboss.apiviz</groupId>
                                        <artifactId>apiviz</artifactId>
                                        <version>${apiviz.version}</version>
                                    </docletArtifact>
                                    <additionalparam>
                                        -charset UTF-8
                                        -docencoding UTF-8
                                        -version
                                        -author
                                        -breakiterator
                                        -linksource
                                        -sourcetab 4
                                        -windowtitle "${project.name} ${project.version} API Reference"
                                        -doctitle "${project.name} ${project.version} API Reference"
                                        -link https://docs.oracle.com/javase/8/docs/api/
                                        -link http://jsr311.java.net/nonav/releases/1.1
                                        -sourceclasspath ${project.build.outputDirectory}
                                    </additionalparam>
                                </configuration>
                                <reports>
                                    <report>javadoc</report>
                                </reports>
                            </reportSet>
                            <reportSet>
                                <id>aggregate</id>
                                <configuration>
                                    <!-- Specific configuration for the aggregate report -->
                                    <doclet>org.jboss.apiviz.APIviz</doclet>
                                    <docletArtifact>
                                        <groupId>org.jboss.apiviz</groupId>
                                        <artifactId>apiviz</artifactId>
                                        <version>${apiviz.version}</version>
                                    </docletArtifact>
                                    <additionalparam>
                                        -charset UTF-8
                                        -docencoding UTF-8
                                        -version
                                        -author
                                        -breakiterator
                                        -linksource
                                        -sourcetab 4
                                        -windowtitle "${project.name} ${project.version} API Reference"
                                        -doctitle "${project.name} ${project.version} API Reference"
                                        -link https://docs.oracle.com/javase/8/docs/api/
                                        -link http://jsr311.java.net/nonav/releases/1.1
                                    </additionalparam>
                                </configuration>
                                <reports>
                                    <report>aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${maven-jxr-plugin.version}</version>
                        <configuration>
                            <linkJavadoc>true</linkJavadoc>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <meminitial>128m</meminitial>
                            <maxmem>512m</maxmem>
                            <!-- Allows non-ascii characters in source code -->
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-plugin-plugin</artifactId>
                        <version>${maven-plugin-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${maven-project-info-reports-plugin.version}</version>
                        <configuration>
                            <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                            <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${maven-surefire-report-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <id>unit-tests</id>
                                <reports>
                                    <report>report-only</report>
                                </reports>
                                <configuration>
                                    <outputName>surefire-report</outputName>
                                    <reportsDirectories>
                                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                                    </reportsDirectories>
                                </configuration>
                            </reportSet>
                            <reportSet>
                                <id>integration-tests</id>
                                <reports>
                                    <report>report-only</report>
                                </reports>
                                <configuration>
                                    <outputName>failsafe-report</outputName>
                                    <reportsDirectories>
                                        <reportsDirectory>${project.build.directory}/failsafe-reports</reportsDirectory>
                                    </reportsDirectories>
                                </configuration>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>taglist-maven-plugin</artifactId>
                        <version>${taglist-maven-plugin.version}</version>
                        <configuration>
                            <tagListOptions>
                                <tagClasses>
                                    <tagClass>
                                        <displayName>To Do</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>TODO</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                    <tagClass>
                                        <displayName>To Fix</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>FIXME</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>DEBT</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>deprecated</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                    <tagClass>
                                        <displayName>Optional</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>XXX</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                </tagClasses>
                            </tagListOptions>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changes-plugin</artifactId>
                        <version>${maven-changes-plugin.version}</version>
                        <configuration>
                            <githubAPIScheme>https</githubAPIScheme>
                            <githubAPIPort>443</githubAPIPort>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>changes-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changelog-plugin</artifactId>
                        <version>${maven-changelog-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <reportSets>
				            <reportSet>
				                <id>unit-tests</id>
				                <reports>
				                    <report>report</report>
				                </reports>
				                <configuration>
				                    <reportName>JaCoCo Unit</reportName>
				                    <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
				                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
				                </configuration>
				            </reportSet>
				            <reportSet>
				                <id>integration-tests</id>
				                <reports>
				                    <report>report</report>
				                </reports>
				                <configuration>
				                    <reportName>JaCoCo Integration</reportName>
				                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
				                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
				                </configuration>
				            </reportSet>
				        </reportSets>
                    </plugin>
                    <plugin>
      					<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>${versions-maven-plugin.version}</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>dependency-updates-report</report>
									<report>plugin-updates-report</report>
									<report>property-updates-report</report>
								</reports>
							</reportSet>
						</reportSets>
    				</plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>with-dev-report</id>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <version>${findbugs-maven-plugin.version}</version>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
        	<id>with-devtools</id>
        	<dependencies>
        		<dependency>
        			<groupId>org.springframework.boot</groupId>
        			<artifactId>spring-boot-devtools</artifactId>
    			</dependency>
        	</dependencies>
        </profile>

        <profile>
        		<id>dockerize</id>
        		<activation>
	            <file>
	                <exists>.dockerize</exists>
	            </file>
	        </activation>
	        	<build>
	        		<plugins>
	        			<plugin>
	 					<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-maven-plugin.version}</version>
						<configuration>
							<images>
								<image>
									<name>fastnsilver/%a:%l</name>
									<build>
										<dockerFileDir>${project.build.directory}/docker-ready</dockerFileDir>
									</build>
								</image>
							</images>
							<skipMachine>true</skipMachine>
						</configuration>
						<executions>
    							<execution>
    								<id>destroy-latest-docker-image</id>
    								<phase>clean</phase>
    								<goals>
    									<goal>remove</goal>
    								</goals>
    								<configuration>
    									<removeAll>true</removeAll>
    								</configuration>
    							</execution>
    							<execution>
    								<id>build-new-docker-image</id>
    								<phase>install</phase>
    								<goals>
    									<goal>build</goal>
    								</goals>
    							</execution>
    							<execution>
    								<id>publish-docker-image</id>
    								<phase>deploy</phase>
    								<goals>
    									<goal>push</goal>
    								</goals>
    							</execution>
    						</executions>
					</plugin>
					<plugin>
					    <artifactId>maven-resources-plugin</artifactId>
					    <version>${maven-resources-plugin.version}</version>
					    <executions>
					        <execution>
					            <id>prepare-for-docker-build</id>
					            <phase>verify</phase>
					            <goals>
					                <goal>copy-resources</goal>
					            </goals>
					            <configuration>
					                <outputDirectory>${project.build.directory}/docker-ready</outputDirectory>
					                <resources>
					                    <resource>
					                        <directory>src/main/docker</directory>
					                        <filtering>true</filtering>
					                    </resource>
					                    <resource>
					                        <directory>${project.build.directory}</directory>
					                        <includes>
					                            <include>${project.artifactId}-${project.version}-exec.jar</include>
					                        </includes>
					                    </resource>
					                </resources>
					            </configuration>
					        </execution>
					    </executions>
					</plugin>
	        		</plugins>
        		</build>
        </profile>

    </profiles>
</project>
